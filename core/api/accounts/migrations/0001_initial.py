# Generated by Django 4.2.3 on 2023-07-03 13:48

import core.general.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "id",
                    models.TextField(
                        primary_key=True,
                        serialize=False,
                        unique=True,
                        validators=[
                            core.general.validators.HexStringValidator(16),
                            django.core.validators.MaxLengthValidator(16),
                        ],
                    ),
                ),
                (
                    "username",
                    models.TextField(
                        unique=True,
                        validators=[django.core.validators.MaxLengthValidator(25)],
                    ),
                ),
                ("password", models.TextField()),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                    ),
                ),
                (
                    "role",
                    models.TextField(
                        choices=[("CREATOR", "creator"), ("BUSINESS", "business")]
                    ),
                ),
                ("balance", models.IntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("first_name", models.TextField(blank=True)),
                ("last_name", models.TextField(blank=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
                "db_table": "accounts",
            },
        ),
    ]
